{"version":3,"sources":["Components/Content/Dialogs/Dialogs.module.css","Components/Content/Dialogs/DialogsItem/DialogItem.jsx","Components/Content/Dialogs/MessagesItem/MessageItem.jsx","Components/Content/Dialogs/Dialogs.jsx","Components/Content/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialogItem","src","avatar","alt","to","name","MessageItem","message","Dialogs","messageText","React","createRef","dialogsData","state","dialogs","map","d","dialogElement","messagesData","messages","m","messageItem","messagesPage","addMessage","value","newMessageText","onChange","text","current","updateNewMessageText","ref","placeholder","onClick","sendMessage","compose","connect","dialogsPage","withRedirect"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,QAAU,yBAAyB,SAAW,0BAA0B,WAAa,4BAA4B,YAAc,6BAA6B,cAAgB,iC,qGCgB5NC,EAZI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,sBAAKC,UAAWC,IAAEC,WAAlB,UACI,qBAAKC,IAAKN,EAAMO,OAAQC,IAAI,KAC5B,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,WCAvBC,EATK,SAACX,GAEjB,OACI,qBAAKG,UAAWC,IAAEQ,QAAlB,SACKZ,EAAMY,WCwCJC,EA1CC,SAACb,GAEb,IAAIc,EAAcC,IAAMC,YAWpBC,EACAjB,EAAMkB,MAAMC,QAAQC,KAAI,SAAAC,GAAC,OAAI,qBAAgBlB,UAAWC,IAAEkB,cAA7B,SAA4C,cAAC,EAAD,CAAapB,GAAImB,EAAEnB,GAAIQ,KAAMW,EAAEX,KAAMH,OAAQc,EAAEd,UAAjFc,EAAEnB,OAEzCqB,EACAvB,EAAMkB,MAAMM,SAASJ,KAAI,SAAAK,GAAC,OAAI,qBAAgBtB,UAAWC,IAAEsB,YAA7B,SAA0C,cAAC,EAAD,CAAaxB,GAAIuB,EAAEvB,GAAIU,QAASa,EAAEb,WAAlEa,EAAEvB,OAE9C,OACI,sBAAKC,UAAWC,IAAEuB,aAAlB,UACI,qBAAKxB,UAAWC,IAAEe,QAAlB,SACKF,IAEL,sBAAKd,UAAWC,IAAEoB,SAAlB,UACKD,EACD,sBAAKpB,UAAWC,IAAEwB,WAAlB,UACI,8BACI,0BAAUC,MAAO7B,EAAMkB,MAAMY,eACnBC,SAzBH,WACvB,IAAIC,EAAOlB,EAAYmB,QAAQJ,MAC/B7B,EAAMkC,qBAAqBF,IAwBDG,IAAKrB,EACLsB,YAAa,yBAE3B,8BACI,wBAAQC,QAzBV,WACdrC,EAAMsC,eAwBU,8B,wBCvBTC,sBACXC,aARkB,SAACtB,GACnB,MAAO,CACTA,MAAOA,EAAMuB,eAMc,CAACP,yBAAsBI,kBAChDI,IAFWH,CAGb1B","file":"static/js/4.5ad093e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesPage\":\"Dialogs_messagesPage__2-91X\",\"dialogs\":\"Dialogs_dialogs__1avrv\",\"messages\":\"Dialogs_messages__vLt5i\",\"dialogItem\":\"Dialogs_dialogItem__10kiR\",\"messageItem\":\"Dialogs_messageItem__1ON2j\",\"dialogElement\":\"Dialogs_dialogElement__3LLW1\"};","import React from 'react';\nimport s from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props) => {\n\n    let path = \"/dialogs/\" + props.id;\n\n    return (\n        <div className={s.dialogItem}>\n            <img src={props.avatar} alt=\"\"/>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;","import s from \"../Dialogs.module.css\";\nimport React from \"react\";\n\nconst MessageItem = (props) => {\n\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n};\n\nexport default MessageItem;","import React from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogsItem/DialogItem\";\nimport MessageItem from \"./MessagesItem/MessageItem\";\n\nconst Dialogs = (props) => {\n\n    let messageText = React.createRef();\n\n    let updateNewMessageText = () => {\n        let text = messageText.current.value;\n        props.updateNewMessageText(text);\n    };\n\n    let sendMessage = () => {\n        props.sendMessage();\n    };\n\n    let dialogsData =\n        props.state.dialogs.map(d => <div key={d.id} className={s.dialogElement}><DialogItem  id={d.id} name={d.name} avatar={d.avatar}/></div>);\n\n    let messagesData =\n        props.state.messages.map(m => <div key={m.id} className={s.messageItem}><MessageItem id={m.id} message={m.message}/></div>);\n\n    return (\n        <div className={s.messagesPage}>\n            <div className={s.dialogs}>\n                {dialogsData}\n            </div>\n            <div className={s.messages}>\n                {messagesData}\n                <div className={s.addMessage}>\n                    <div>\n                        <textarea value={props.state.newMessageText}\n                                  onChange={updateNewMessageText}\n                                  ref={messageText}\n                                  placeholder={\"Write message here\"}/>\n                    </div>\n                    <div>\n                        <button onClick={sendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Dialogs;","import React from 'react';\nimport {sendMessage, updateNewMessageText} from \"../../../store/dialogsPageReducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withRedirect} from \"../../../utils/HOCs\";\nimport {compose} from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n  state: state.dialogsPage\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps, {updateNewMessageText, sendMessage}),\n    withRedirect\n)(Dialogs);\n\n"],"sourceRoot":""}